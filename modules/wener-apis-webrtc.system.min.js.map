{"version":3,"file":"wener-apis-webrtc.system.min.js","sources":["../../../../.yarn/cache/immer-npm-6.0.9-1cab3ed201-e55b0d70c9.zip/node_modules/immer/dist/immer.esm.js","../../src/libs/webrtc/rtcs.ts","../../src/modules/webrtc/components/WebRTCChecker.tsx"],"sourcesContent":["function n(n){for(var t=arguments.length,r=Array(t>1?t-1:0),e=1;e<t;e++)r[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=L[n],o=i?\"function\"==typeof i?i.apply(null,r):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(r.length?\" \"+r.join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function t(n){return!!n&&!!n[G]}function r(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var t=Object.getPrototypeOf(n);return!t||t===Object.prototype}(n)||Array.isArray(n)||!!n[B]||!!n.constructor[B]||c(n)||s(n))}function e(n){if(n&&n[G])return n[G].t}function i(n,t,r){void 0===r&&(r=!1),0===o(n)?(r?Object.keys:Q)(n).forEach((function(r){return t(r,n[r],n)})):n.forEach((function(r,e){return t(e,r,n)}))}function o(n){var t=n[G];return t?t.i>3?t.i-4:t.i:Array.isArray(n)?1:c(n)?2:s(n)?3:0}function u(n,t){return 2===o(n)?n.has(t):Object.prototype.hasOwnProperty.call(n,t)}function a(n,t){return 2===o(n)?n.get(t):n[t]}function f(n,t){return n===t?0!==n||1/n==1/t:n!=n&&t!=t}function c(n){return U&&n instanceof Map}function s(n){return W&&n instanceof Set}function v(n){return n.o||n.t}function p(t,r){if(void 0===r&&(r=!1),Array.isArray(t))return t.slice();var e=Object.create(Object.getPrototypeOf(t));return i(t,(function(i){if(i!==G){var o=Object.getOwnPropertyDescriptor(t,i),u=o.value;o.get&&(r||n(1),u=o.get.call(t)),o.enumerable?e[i]=u:Object.defineProperty(e,i,{value:u,writable:!0,configurable:!0})}})),e}function d(n,e){t(n)||h(n)||!r(n)||(o(n)>1&&(n.set=n.add=n.clear=n.delete=l),Object.freeze(n),e&&i(n,(function(n,t){return d(t,!0)}),!0))}function l(){n(2)}function h(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function y(t){var r=V[t];return r||n(\"production\"!==process.env.NODE_ENV?18:19,t),r}function b(n,t){V[n]=t}function m(){return\"production\"===process.env.NODE_ENV||K||n(0),K}function _(n,t){t&&(y(\"Patches\"),n.u=[],n.s=[],n.v=t)}function j(n){O(n),n.p.forEach(w),n.p=null}function O(n){n===K&&(K=n.l)}function g(n){return K={p:[],l:K,h:n,m:!0,_:0}}function w(n){var t=n[G];0===t.i||1===t.i?t.j():t.O=!0}function S(t,e){e._=e.p.length;var i=e.p[0],o=void 0!==t&&t!==i;return e.h.g||y(\"ES5\").S(e,t,o),o?(i[G].P&&(j(e),n(4)),r(t)&&(t=P(e,t),e.l||A(e,t)),e.u&&y(\"Patches\").M(i[G],t,e.u,e.s)):t=P(e,i,[]),j(e),e.u&&e.v(e.u,e.s),t!==q?t:void 0}function P(n,t,r){if(h(t))return t;var e=t[G];if(!e)return i(t,(function(i,o){return M(n,e,t,i,o,r)}),!0),t;if(e.A!==n)return t;if(!e.P)return A(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=p(e.k,!0):e.o;i(o,(function(t,i){return M(n,e,o,t,i,r)})),A(n,o,!1),r&&n.u&&y(\"Patches\").R(e,r,n.u,n.s)}return e.o}function M(e,i,c,s,v,p){if(\"production\"!==process.env.NODE_ENV&&v===c&&n(5),t(v)){var d=P(e,v,p&&i&&3!==i.i&&!u(i.D,s)?p.concat(s):void 0);if(h=s,y=d,2===(b=o(l=c))?l.set(h,y):3===b?(l.delete(h),l.add(y)):l[h]=y,!t(d))return;e.m=!1}var l,h,y,b;if((!i||!f(v,a(i.t,s)))&&r(v)){if(!e.h.N&&e._<1)return;P(e,v),i&&i.A.l||A(e,v)}}function A(n,t,r){void 0===r&&(r=!1),n.h.N&&n.m&&d(t,r)}function x(n,t){var r=n[G],e=Reflect.getOwnPropertyDescriptor(r?v(r):n,t);return e&&e.value}function z(n){if(!n.P){if(n.P=!0,0===n.i||1===n.i){var t=n.o=p(n.t);i(n.p,(function(n,r){t[n]=r})),n.p=void 0}n.l&&z(n.l)}}function I(n){n.o||(n.o=p(n.t))}function E(n,t,r){var e=c(t)?y(\"MapSet\").T(t,r):s(t)?y(\"MapSet\").F(t,r):n.g?function(n,t){var r=Array.isArray(n),e={i:r?1:0,A:t?t.A:m(),P:!1,I:!1,D:{},l:t,t:n,k:null,p:{},o:null,j:null,C:!1},i=e,o=Y;r&&(i=[e],o=Z);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(t,r):y(\"ES5\").J(t,r);return(r?r.A:m()).p.push(e),e}function k(n,t){n.g?z(t):y(\"ES5\").K(t)}function R(){function e(n,t){var r=n[G];if(r&&!r.$){r.$=!0;var e=n[t];return r.$=!1,e}return n[t]}function o(n){n.P||(n.P=!0,n.l&&o(n.l))}function a(n){n.o||(n.o=c(n.t))}function c(n){var t=n&&n[G];if(t){t.$=!0;var r=p(t.k,!0);return t.$=!1,r}return p(n)}function s(n){for(var t=n.length-1;t>=0;t--){var r=n[t][G];if(!r.P)switch(r.i){case 5:l(r)&&o(r);break;case 4:d(r)&&o(r)}}}function d(n){for(var t=n.t,r=n.k,e=Object.keys(r),i=e.length-1;i>=0;i--){var o=e[i],a=t[o];if(void 0===a&&!u(t,o))return!0;var c=r[o],s=c&&c[G];if(s?s.t!==a:!f(c,a))return!0}return e.length!==Object.keys(t).length}function l(n){var t=n.k;if(t.length!==n.t.length)return!0;var r=Object.getOwnPropertyDescriptor(t,t.length-1);return!(!r||r.get)}function h(t){t.O&&n(3,JSON.stringify(v(t)))}var y={};b(\"ES5\",{J:function(n,t){var u=Array.isArray(n),s=c(n);i(s,(function(t){!function(n,t,i){var u=y[t];u?u.enumerable=i:y[t]=u={enumerable:i,get:function(){return function(n,t){h(n);var i=e(v(n),t);return n.$?i:i===e(n.t,t)&&r(i)?(a(n),n.o[t]=E(n.A.h,i,n)):i}(this[G],t)},set:function(n){!function(n,t,r){if(h(n),n.D[t]=!0,!n.P){if(f(r,e(v(n),t)))return;o(n),a(n)}n.o[t]=r}(this[G],t,n)}},Object.defineProperty(n,t,u)}(s,t,u||function(n,t){var r=Object.getOwnPropertyDescriptor(n,t);return!(!r||!r.enumerable)}(n,t))}));var p={i:u?5:4,A:t?t.A:m(),P:!1,$:!1,I:!1,D:{},l:t,t:n,k:s,o:null,O:!1,C:!1};return Object.defineProperty(s,G,{value:p,writable:!0}),s},K:o,S:function(n,r,e){n.p.forEach((function(n){n[G].$=!0})),e?t(r)&&r[G].A===n&&s(n.p):(n.u&&function n(t){if(t&&\"object\"==typeof t){var r=t[G];if(r){var e=r.t,a=r.k,f=r.D,c=r.i;if(4===c)i(a,(function(t){t!==G&&(void 0!==e[t]||u(e,t)?f[t]||n(a[t]):(f[t]=!0,o(r)))})),i(e,(function(n){void 0!==a[n]||u(a,n)||(f[n]=!1,o(r))}));else if(5===c){if(l(r)&&(o(r),f.length=!0),a.length<e.length)for(var s=a.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<a.length;v++)f[v]=!0;for(var p=Math.min(a.length,e.length),d=0;d<p;d++)void 0===f[d]&&n(a[d])}}}}(n.p[0]),s(n.p))}})}function D(){function r(n){if(!n||\"object\"!=typeof n)return n;if(Array.isArray(n))return n.map(r);if(c(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],r(n[1])]})));if(s(n))return new Set(Array.from(n).map(r));var t=Object.create(Object.getPrototypeOf(n));for(var e in n)t[e]=r(n[e]);return t}function e(n){return t(n)?r(n):n}var f=\"add\";b(\"Patches\",{U:function(t,e){return e.forEach((function(e){for(var i=e.path,u=e.op,c=t,s=0;s<i.length-1;s++)\"object\"!=typeof(c=a(c,i[s]))&&n(15,i.join(\"/\"));var v=o(c),p=r(e.value),d=i[i.length-1];switch(u){case\"replace\":switch(v){case 2:return c.set(d,p);case 3:n(16);default:return c[d]=p}case f:switch(v){case 1:return c.splice(d,0,p);case 2:return c.set(d,p);case 3:return c.add(p);default:return c[d]=p}case\"remove\":switch(v){case 1:return c.splice(d,1);case 2:return c.delete(d);case 3:return c.delete(e.value);default:return delete c[d]}default:n(17,u)}})),t},R:function(n,t,r,o){switch(n.i){case 0:case 4:case 2:return function(n,t,r,o){var c=n.t,s=n.o;i(n.D,(function(n,i){var v=a(c,n),p=a(s,n),d=i?u(c,n)?\"replace\":f:\"remove\";if(v!==p||\"replace\"!==d){var l=t.concat(n);r.push(\"remove\"===d?{op:d,path:l}:{op:d,path:l,value:p}),o.push(d===f?{op:\"remove\",path:l}:\"remove\"===d?{op:f,path:l,value:e(v)}:{op:\"replace\",path:l,value:e(v)})}}))}(n,t,r,o);case 5:case 1:return function(n,t,r,i){var o=n.t,u=n.D,a=n.o;if(a.length<o.length){var c=[a,o];o=c[0],a=c[1];var s=[i,r];r=s[0],i=s[1]}for(var v=a.length-o.length,p=0;o[p]===a[p]&&p<o.length;)++p;for(var d=o.length;d>p&&o[d-1]===a[d+v-1];)--d;for(var l=p;l<d;++l)if(u[l]&&a[l]!==o[l]){var h=t.concat([l]);r.push({op:\"replace\",path:h,value:e(a[l])}),i.push({op:\"replace\",path:h,value:e(o[l])})}for(var y=r.length,b=d+v-1;b>=d;--b){var m=t.concat([b]);r[y+b-d]={op:f,path:m,value:e(a[b])},i.push({op:\"remove\",path:m})}}(n,t,r,o);case 3:return function(n,t,r,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=t.concat([u]);r.push({op:\"remove\",path:i,value:n}),e.unshift({op:f,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=t.concat([u]);r.push({op:f,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,t,r,o)}},M:function(n,t,r,e){r.push({op:\"replace\",path:[],value:t}),e.push({op:\"replace\",path:[],value:n.t})}})}function N(){function t(n,t){function r(){this.constructor=n}u(n,t),n.prototype=(r.prototype=t.prototype,new r)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function i(n){n.o||(n.o=new Set,n.t.forEach((function(t){if(r(t)){var e=E(n.A.h,t,n);n.p.set(t,e),n.o.add(e)}else n.o.add(t)})))}function o(t){t.O&&n(3,JSON.stringify(v(t)))}var u=function(n,t){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,t){n.__proto__=t}||function(n,t){for(var r in t)t.hasOwnProperty(r)&&(n[r]=t[r])})(n,t)},a=function(){function n(n,t){return this[G]={i:2,l:t,A:t?t.A:m(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}t(n,Map);var i=n.prototype;return Object.defineProperty(i,\"size\",{get:function(){return v(this[G]).size}}),i.has=function(n){return v(this[G]).has(n)},i.set=function(n,t){var r=this[G];return o(r),v(r).get(n)!==t&&(e(r),k(r.A.h,r),r.D.set(n,!0),r.o.set(n,t),r.D.set(n,!0)),this},i.delete=function(n){if(!this.has(n))return!1;var t=this[G];return o(t),e(t),k(t.A.h,t),t.D.set(n,!1),t.o.delete(n),!0},i.clear=function(){var n=this[G];return o(n),e(n),k(n.A.h,n),n.D=new Map,n.o.clear()},i.forEach=function(n,t){var r=this;v(this[G]).forEach((function(e,i){n.call(t,r.get(i),i,r)}))},i.get=function(n){var t=this[G];o(t);var i=v(t).get(n);if(t.I||!r(i))return i;if(i!==t.t.get(n))return i;var u=E(t.A.h,i,t);return e(t),t.o.set(n,u),u},i.keys=function(){return v(this[G]).keys()},i.values=function(){var n,t=this,r=this.keys();return(n={})[H]=function(){return t.values()},n.next=function(){var n=r.next();return n.done?n:{done:!1,value:t.get(n.value)}},n},i.entries=function(){var n,t=this,r=this.keys();return(n={})[H]=function(){return t.entries()},n.next=function(){var n=r.next();if(n.done)return n;var e=t.get(n.value);return{done:!1,value:[n.value,e]}},n},i[H]=function(){return this.entries()},n}(),f=function(){function n(n,t){return this[G]={i:3,l:t,A:t?t.A:m(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}t(n,Set);var r=n.prototype;return Object.defineProperty(r,\"size\",{get:function(){return v(this[G]).size}}),r.has=function(n){var t=this[G];return o(t),t.o?!!t.o.has(n)||!(!t.p.has(n)||!t.o.has(t.p.get(n))):t.t.has(n)},r.add=function(n){var t=this[G];return o(t),this.has(n)||(i(t),k(t.A.h,t),t.o.add(n)),this},r.delete=function(n){if(!this.has(n))return!1;var t=this[G];return o(t),i(t),k(t.A.h,t),t.o.delete(n)||!!t.p.has(n)&&t.o.delete(t.p.get(n))},r.clear=function(){var n=this[G];return o(n),i(n),k(n.A.h,n),n.o.clear()},r.values=function(){var n=this[G];return o(n),i(n),n.o.values()},r.entries=function(){var n=this[G];return o(n),i(n),n.o.entries()},r.keys=function(){return this.values()},r[H]=function(){return this.values()},r.forEach=function(n,t){for(var r=this.values(),e=r.next();!e.done;)n.call(t,e.value,e.value,this),e=r.next()},n}();b(\"MapSet\",{T:function(n,t){return new a(n,t)},F:function(n,t){return new f(n,t)}})}function T(){R(),N(),D()}function F(n){return n}function C(n){return n}var J,K,$=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),U=\"undefined\"!=typeof Map,W=\"undefined\"!=typeof Set,X=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,q=$?Symbol(\"immer-nothing\"):((J={})[\"immer-nothing\"]=!0,J),B=$?Symbol(\"immer-draftable\"):\"__$immer_draftable\",G=$?Symbol(\"immer-state\"):\"__$immer_state\",H=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",L={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},19:function(n){return\"plugin not loaded: \"+n},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\"},Q=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,V={},Y={get:function(n,t){if(t===G)return n;var e=n.p;if(!n.P&&u(e,t))return e[t];var i=v(n)[t];if(n.I||!r(i))return i;if(n.P){if(i!==x(n.t,t))return i;e=n.o}return e[t]=E(n.A.h,i,n)},has:function(n,t){return t in v(n)},ownKeys:function(n){return Reflect.ownKeys(v(n))},set:function(n,t,r){if(!n.P){var e=x(n.t,t);if(r?f(e,r)||r===n.p[t]:f(e,r)&&t in n.t)return!0;I(n),z(n)}return n.D[t]=!0,n.o[t]=r,!0},deleteProperty:function(n,t){return void 0!==x(n.t,t)||t in n.t?(n.D[t]=!1,I(n),z(n)):n.D[t]&&delete n.D[t],n.o&&delete n.o[t],!0},getOwnPropertyDescriptor:function(n,t){var r=v(n),e=Reflect.getOwnPropertyDescriptor(r,t);return e&&(e.writable=!0,e.configurable=1!==n.i||\"length\"!==t),e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},Z={};i(Y,(function(n,t){Z[n]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),Z.deleteProperty=function(t,r){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(r))&&n(13),Y.deleteProperty.call(this,t[0],r)},Z.set=function(t,r,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==r&&isNaN(parseInt(r))&&n(14),Y.set.call(this,t[0],r,e,t[0])};var nn=function(){function e(n){this.g=X,this.N=\"production\"!==process.env.NODE_ENV,\"boolean\"==typeof(null==n?void 0:n.useProxies)&&this.setUseProxies(n.useProxies),\"boolean\"==typeof(null==n?void 0:n.autoFreeze)&&this.setAutoFreeze(n.autoFreeze),this.produce=this.produce.bind(this),this.produceWithPatches=this.produceWithPatches.bind(this)}var i=e.prototype;return i.produce=function(t,e,i){if(\"function\"==typeof t&&\"function\"!=typeof e){var o=e;e=t;var u=this;return function(n){var t=this;void 0===n&&(n=o);for(var r=arguments.length,i=Array(r>1?r-1:0),a=1;a<r;a++)i[a-1]=arguments[a];return u.produce(n,(function(n){var r;return(r=e).call.apply(r,[t,n].concat(i))}))}}var a;if(\"function\"!=typeof e&&n(6),void 0!==i&&\"function\"!=typeof i&&n(7),r(t)){var f=g(this),c=E(this,t,void 0),s=!0;try{a=e(c),s=!1}finally{s?j(f):O(f)}return\"undefined\"!=typeof Promise&&a instanceof Promise?a.then((function(n){return _(f,i),S(n,f)}),(function(n){throw j(f),n})):(_(f,i),S(a,f))}if((a=e(t))!==q)return void 0===a&&(a=t),this.N&&d(a,!0),a},i.produceWithPatches=function(n,t){var r,e,i=this;return\"function\"==typeof n?function(t){for(var r=arguments.length,e=Array(r>1?r-1:0),o=1;o<r;o++)e[o-1]=arguments[o];return i.produceWithPatches(t,(function(t){return n.apply(void 0,[t].concat(e))}))}:[this.produce(n,t,(function(n,t){r=n,e=t})),r,e]},i.createDraft=function(t){r(t)||n(8);var e=g(this),i=E(this,t,void 0);return i[G].C=!0,O(e),i},i.finishDraft=function(t,r){var e=t&&t[G];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return _(i,r),S(void 0,i)},i.setAutoFreeze=function(n){this.N=n},i.setUseProxies=function(t){X||n(20),this.g=t},i.applyPatches=function(n,r){var e;for(e=r.length-1;e>=0;e--){var i=r[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}var o=y(\"Patches\").U;return t(n)?o(n,r):this.produce(n,(function(n){return o(n,r.slice(e+1))}))},e}(),tn=new nn,rn=tn.produce,en=tn.produceWithPatches.bind(tn),on=tn.setAutoFreeze.bind(tn),un=tn.setUseProxies.bind(tn),an=tn.applyPatches.bind(tn),fn=tn.createDraft.bind(tn),cn=tn.finishDraft.bind(tn);export default rn;export{nn as Immer,an as applyPatches,F as castDraft,C as castImmutable,fn as createDraft,T as enableAllPlugins,R as enableES5,N as enableMapSet,D as enablePatches,cn as finishDraft,B as immerable,t as isDraft,r as isDraftable,q as nothing,e as original,rn as produce,en as produceWithPatches,on as setAutoFreeze,un as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n","import produce from 'immer';\nimport { PeerConnectionState } from './types';\nimport { createLazyPromise } from '@wener/utils';\n\nexport function getCandidates(conn: RTCPeerConnection): Promise<RTCIceCandidate[]> {\n  const candidatesPromise = createLazyPromise();\n  const candidates = [];\n  const handler = (e) => {\n    if (e.candidate) {\n      candidates.push(e.candidate);\n    }\n\n    if (conn.iceGatheringState === 'complete') {\n      candidatesPromise.resolve(candidates);\n    }\n  };\n\n  conn.addEventListener('icecandidate', handler);\n  conn.addEventListener('icegatheringstatechange', handler);\n\n  candidatesPromise.finally?.(() => {\n    conn.removeEventListener('icecandidate', handler);\n    conn.removeEventListener('icegatheringstatechange', handler);\n  });\n  return candidatesPromise;\n}\n\nconst ConnectionEvents = [\n  'connectionstatechange',\n  'datachannel',\n  'icecandidate',\n  'icecandidateerror',\n  'iceconnectionstatechange',\n  'negotiationneeded',\n  'signalingstatechange',\n  'statsended',\n  'track',\n];\nexport const ChannelEvents = ['bufferedamountlow', 'close', 'error', 'message', 'open'];\n\nexport function addConnectionEventLogger({ name, connection, excludes = [] }) {\n  ConnectionEvents.filter((v) => !excludes.includes(v)).map((v) =>\n    connection.addEventListener(v, (e) => {\n      const conn = e.target as RTCPeerConnection;\n      const { signalingState, iceGatheringState, iceConnectionState, connectionState } = conn;\n      const { state: sctpState } = conn?.sctp ?? {};\n      console.log(\n        `${name} Connection EVENT ${v}`,\n        {\n          signalingState,\n          iceGatheringState,\n          iceConnectionState,\n          connectionState,\n          sctpState,\n        },\n        e.target,\n        e,\n      );\n    }),\n  );\n}\n\nexport function addChannelEventLogger({ name, channel, excludes = [] }) {\n  ChannelEvents.filter((v) => !excludes.includes(v)).map((v) =>\n    channel.addEventListener(v, (e) => {\n      const target = e.target as RTCDataChannel;\n      const {\n        id,\n        label,\n        readyState,\n        negotiated,\n        bufferedAmount,\n        bufferedAmountLowThreshold,\n        maxPacketLifeTime,\n        maxRetransmits,\n      } = target;\n      console.log(\n        `${name} Channel EVENT ${v}`,\n        {\n          id,\n          label,\n          readyState,\n          negotiated,\n          bufferedAmount,\n          bufferedAmountLowThreshold,\n          maxPacketLifeTime,\n          maxRetransmits,\n        },\n        e.target,\n        e,\n      );\n    }),\n  );\n}\n\nexport function getPeerConnectionState(conn: RTCPeerConnection): PeerConnectionState {\n  const {\n    connectionState,\n    iceGatheringState,\n    iceConnectionState,\n    signalingState,\n\n    idpErrorInfo,\n  } = conn;\n\n  return {\n    connectionState,\n    iceGatheringState,\n    iceConnectionState,\n    signalingState,\n\n    idpErrorInfo,\n    //\n    sctpState: conn.sctp?.state,\n    sctpTransportState: conn.sctp?.transport?.state,\n  };\n}\n\nexport function addPeerConnectionStateListener(\n  conn: RTCPeerConnection,\n  onStateChange: (s: PeerConnectionState) => void,\n): () => void {\n  let state = getPeerConnectionState(conn);\n  const handler = (e) => {\n    const neo = produce(state, (s) => {\n      Object.assign(s, getPeerConnectionState(conn));\n    });\n    if (neo !== state) {\n      state = neo;\n      onStateChange(state);\n    }\n  };\n  onStateChange(state);\n\n  const events = ['connectionstatechange', 'icegatheringstatechange', 'signalingstatechange', 'negotiationneeded'];\n  events.forEach((v) => conn.addEventListener(v, handler));\n\n  return () => {\n    events.forEach((v) => conn.removeEventListener(v, handler));\n  };\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Descriptions } from 'antd';\nimport { addPeerConnectionStateListener, getCandidates } from 'src/libs/webrtc/rtcs';\nimport { PeerConnectionState } from 'src/libs/webrtc/types';\nimport { useAsyncEffect } from '@wener/ui';\nimport produce from 'immer';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { createLazyPromise, getGlobalThis } from '@wener/utils';\n\nconst CandidateErrorLine: React.FC<{ candidate }> = ({ candidate }) => {\n  const { url, errorCode, errorText, hostCandidate } = candidate;\n  if (errorCode) {\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <span>❌</span>\n        <span>\n          {url} - 错误码 {errorCode} - {errorText} - {hostCandidate}\n        </span>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport const WebRTCChecker: React.FC = () => {\n  const [phase, setPhase] = useState('N/A');\n\n  const [connState, setConnState] = useState<PeerConnectionState>({} as any);\n  const [candidates, setCandidates] = useState<any[]>([]);\n  // https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/\n  const [iceServers, setIceServers] = useState<RTCIceServer[]>([\n    { urls: ['stun:stun.wener.me'] },\n    { urls: ['stun:stun2.wener.me'] },\n  ]);\n\n  const [devices, setDevices] = useState<MediaDeviceInfo[]>([]);\n\n  const connRef = useRef<RTCPeerConnection>();\n  const remoteRef = useRef<RTCPeerConnection>();\n  const metaRef = useRef<RTCDataChannel>();\n\n  const globalThis = getGlobalThis();\n\n  useAsyncEffect(async () => {\n    if (navigator.mediaDevices?.enumerateDevices) {\n      setDevices(await navigator.mediaDevices.enumerateDevices());\n    }\n  }, []);\n\n  useAsyncEffect(async ({ setCloser }) => {\n    if (!globalThis.RTCPeerConnection) {\n      return;\n    }\n    const closer = [];\n    setCloser(() => closer.forEach((v) => v()));\n\n    setPhase('初始化');\n    const configuration = {\n      iceServers,\n    };\n    const conn = (connRef.current = new RTCPeerConnection(configuration));\n    closer.push(addPeerConnectionStateListener(conn, setConnState));\n    closer.push(conn.close.bind(conn));\n\n    window['WebRTCCheckerTest'] = { conn };\n\n    const candidates = [];\n    const gatherReady = createLazyPromise();\n    const connectionReady = createLazyPromise();\n    conn.addEventListener('icegatheringstatechange', (e) => {\n      if (conn.iceGatheringState === 'complete') {\n        gatherReady.resolve('');\n      }\n    });\n    conn.addEventListener('connectionstatechange', (e) => {\n      if (['failed', 'connected'].includes(conn.connectionState)) {\n        connectionReady.resolve(conn.connectionState);\n      }\n    });\n\n    conn.addEventListener('icecandidate', (e) => {\n      console.log('WebRTC Checker local candidate', e.candidate);\n\n      if (e.candidate) {\n        candidates.push(e.candidate);\n\n        const {\n          foundation,\n          candidate,\n          address,\n          component,\n          ip,\n          port,\n          priority,\n          protocol,\n          relatedAddress,\n          relatedPort,\n          sdpMLineIndex,\n          sdpMid,\n          tcpType,\n          type,\n          usernameFragment,\n        } = e.candidate as any;\n\n        setCandidates(\n          produce((s) => {\n            s.push({\n              url: e.url,\n              candidate,\n              address,\n              component,\n              foundation,\n              ip,\n              port,\n              priority,\n              protocol,\n              relatedAddress,\n              relatedPort,\n              sdpMLineIndex,\n              sdpMid,\n              tcpType,\n              type,\n              usernameFragment,\n            });\n          }),\n        );\n      }\n    });\n    conn.addEventListener('icecandidateerror', (e) => {\n      const { url, errorCode, errorText, hostCandidate } = e;\n\n      setCandidates(\n        produce((s) => {\n          s.push({ url, errorCode, errorText, hostCandidate });\n        }),\n      );\n    });\n\n    const meta = (metaRef.current = conn.createDataChannel('meta', {\n      ordered: true,\n    }));\n    closer.push(meta.close.bind(meta));\n\n    const offer = await conn.createOffer({\n      offerToReceiveAudio: true,\n      offerToReceiveVideo: true,\n    });\n    await conn.setLocalDescription(offer);\n\n    //\n    setPhase('等待待选信息');\n    await gatherReady;\n\n    //\n    setPhase('应答');\n    const remote = (remoteRef.current = new RTCPeerConnection(configuration));\n    const remoteCandidates = getCandidates(remote);\n    closer.push(remote.close.bind(remote));\n\n    await remote.setRemoteDescription(offer);\n\n    const answer = await remote.createAnswer();\n    await remote.setLocalDescription(answer);\n\n    setPhase('添加待选信息');\n    for (const candidate of candidates) {\n      await remote.addIceCandidate(candidate);\n    }\n\n    setPhase('等待应答待选信息');\n    await remoteCandidates;\n\n    setPhase('接受应答');\n    await conn.setRemoteDescription(answer);\n\n    setPhase('添加应答待选信息');\n    for (const candidate of await remoteCandidates) {\n      await conn.addIceCandidate(candidate);\n    }\n\n    //\n    setPhase('等待链接');\n    await connectionReady;\n\n    setPhase((await connectionReady) === 'connected' ? '已链接' : '链接失败');\n  }, []);\n\n  const ConnectionStates = [\n    { label: '链接状态', name: 'connectionState' },\n    { label: 'ICE 链接状态', name: 'iceConnectionState' },\n    { label: 'ICE 收集状态', name: 'iceGatheringState' },\n    { label: '信令状态', name: 'signalingState' },\n    { label: 'SCTP 状态', name: 'sctpState' },\n    { label: 'SCTP 传输状态', name: 'sctpTransportState' },\n  ];\n\n  const columns = useBreakpoints({ values: [1, 2, 3] });\n  const supportColumns = useBreakpoints({ values: [2, 2, 4, 4] });\n\n  return (\n    <div>\n      <h3>WebRTC 支持</h3>\n      <Descriptions column={supportColumns} layout=\"vertical\" bordered>\n        <Descriptions.Item label=\"RTCPeerConnection\">{emojiOfBoolean(globalThis.RTCPeerConnection)}</Descriptions.Item>\n        <Descriptions.Item label=\"RTCDataChannel\">{emojiOfBoolean(globalThis.RTCDataChannel)}</Descriptions.Item>\n        <Descriptions.Item label=\"getUserMedia\">\n          {emojiOfBoolean(globalThis.navigator?.mediaDevices?.getUserMedia)}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"getDisplayMedia\">\n          {emojiOfBoolean(globalThis.navigator?.mediaDevices?.['getDisplayMedia'])}\n        </Descriptions.Item>\n      </Descriptions>\n\n      <h3>WebRTC 链接 - {phase}</h3>\n\n      <Descriptions className=\"descriptions-table-fixed\" column={columns} layout=\"vertical\" bordered>\n        {ConnectionStates.map(({ name, label }) => (\n          <Descriptions.Item label={label} key={name}>\n            {connState[name] ?? 'N/A'}\n          </Descriptions.Item>\n        ))}\n\n        <Descriptions.Item span={columns} label=\"媒体信息\">\n          <div>\n            <table className=\"media\">\n              <thead>\n                <tr>\n                  <th>索引</th>\n                  <th>媒体</th>\n                  <th>端口</th>\n                  <th className=\"protocol\">协议</th>\n                  <th className=\"format\">格式</th>\n                </tr>\n              </thead>\n              <tbody>\n                {parseMediaDescription(connRef.current?.localDescription?.sdp).map(\n                  ({ media, port, protocol, format }, i) => (\n                    <tr key={i}>\n                      <td>{i}</td>\n                      <td>{media}</td>\n                      <td>{port}</td>\n                      <td className=\"protocol\">{protocol}</td>\n                      <td className=\"format\">{format}</td>\n                    </tr>\n                  ),\n                )}\n              </tbody>\n            </table>\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item span={columns} label=\"编码格式\">\n          <div>\n            <table className=\"encoding\">\n              <thead>\n                <tr>\n                  <th>类型</th>\n                  <th>编码</th>\n                  <th>频率</th>\n                </tr>\n              </thead>\n              <tbody>\n                {parsePayloadType(connRef.current?.localDescription?.sdp ?? '')\n                  .sort(({ type: a }, { type: b }) => a - b)\n                  .map(({ type, encodingName, encodingParameter, clockRate }, i) => (\n                    <tr key={type}>\n                      <td>{type}</td>\n                      <td>{encodingName}</td>\n                      <td>\n                        {clockRate}/{clockRate / 1000}Khz\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item\n          span={columns}\n          label={\n            <div>\n              链接待选信息 / candidates / {candidates.length}\n              {connState.iceGatheringState === 'gathering' ? <LoadingOutlined /> : null}\n            </div>\n          }\n        >\n          <div>\n            <table className=\"candidate\">\n              <thead>\n                <tr>\n                  <th className=\"sdp-mid\">媒体</th>\n                  <th className=\"address\">地址</th>\n                  <th>协议</th>\n                  <th>类型</th>\n                  <th>用户</th>\n                  <th className=\"priority\">Foundation</th>\n                  <th className=\"priority\">优先级</th>\n                </tr>\n              </thead>\n              <tbody>\n                {candidates\n                  .filter(({ errorCode }) => !errorCode)\n                  .sort(({ sdpMid: a }, { sdpMid: b }) => a - b)\n                  .map(\n                    (\n                      {\n                        ip,\n                        address,\n                        port,\n                        protocol,\n                        type,\n                        component,\n                        relatedAddress,\n                        relatePort,\n                        priority,\n                        foundation,\n                        usernameFragment,\n\n                        sdpMid,\n                      },\n                      i,\n                    ) => (\n                      <tr key={i}>\n                        <td className=\"sdp-mid\">{sdpMid}</td>\n                        <td className=\"address\">\n                          {ip || address}:{port}\n                        </td>\n                        <td>{protocol}</td>\n                        <td>\n                          {type}/{component}\n                        </td>\n                        <td>{usernameFragment}</td>\n                        <td className=\"priority\">{foundation}</td>\n                        <td className=\"priority\">{priority}</td>\n                      </tr>\n                    ),\n                  )}\n              </tbody>\n            </table>\n\n            <h4>异常</h4>\n\n            {candidates\n              .filter(({ errorCode }) => errorCode)\n              .map((candidate, i) => (\n                <CandidateErrorLine candidate={candidate} key={i} />\n              ))}\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item span={columns} label=\"设备信息\">\n          <div>\n            <table style={{ tableLayout: 'auto' }}>\n              <thead>\n                <tr>\n                  <th style={{ minWidth: 40 }}>标签</th>\n                  <th>类型</th>\n                  <th>分组ID</th>\n                  <th>设备ID</th>\n                </tr>\n              </thead>\n              <tbody>\n                {devices.map(({ label, kind, groupId, deviceId }, i) => (\n                  <tr key={i}>\n                    <td style={{ minWidth: 40 }}>{label || 'N/A'}</td>\n                    <td>{kind}</td>\n                    <td>{renderSummary(groupId)}</td>\n                    <td>{renderSummary(deviceId)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item label=\"支持的设备限制\" span={columns}>\n          <div>\n            <pre>\n              {JSON.stringify(globalThis?.navigator?.mediaDevices?.getSupportedConstraints?.() ?? {}, null, '  ')}\n            </pre>\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item span={columns} label=\"请求方描述信息 / offer\">\n          <div style={{ width: '100%', overflowX: 'scroll' }}>\n            <pre>{connRef.current?.localDescription?.sdp}</pre>\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item span={columns} label=\"接受方描述信息 / answer\">\n          <div style={{ width: '100%', overflowX: 'scroll' }}>\n            <pre>{remoteRef.current?.localDescription?.sdp}</pre>\n          </div>\n        </Descriptions.Item>\n      </Descriptions>\n\n      <style jsx global>{`\n        @media (max-width: 576px) {\n          .descriptions-table-fixed .ant-descriptions-view > table {\n            table-layout: fixed !important;\n          }\n\n          table.media,\n          table.candidate,\n          table.encoding {\n            display: block !important;\n          }\n        }\n      `}</style>\n      <style jsx>{`\n        h3,\n        h4 {\n          margin-top: 16px;\n          margin-bottom: 8px;\n        }\n\n        table.media,\n        table.candidate,\n        table.encoding {\n          overflow-x: auto;\n          white-space: nowrap;\n          table-layout: unset;\n        }\n\n        table tr:hover {\n          background-color: #edf0f4;\n        }\n\n        table.candidate td,\n        table.candidate th,\n        table.media td,\n        table.media th,\n        table.encoding td,\n        table.encoding th {\n          width: 70px;\n          text-align: center;\n        }\n        .candidate td.address,\n        .candidate th.address {\n          white-space: nowrap;\n\n          width: unset;\n          text-align: left;\n        }\n        .candidate td.priority,\n        .candidate th.priority {\n          width: 140px;\n          text-align: right;\n        }\n        .candidate td.sdp-mid,\n        .candidate th.sdp-mid {\n          width: 40px;\n        }\n\n        table.media td.format,\n        table.media th.format {\n          width: auto;\n          text-align: left;\n        }\n        table.media td.protocol,\n        table.media th.protocol {\n          width: 200px;\n        }\n\n        pre {\n          white-space: pre-wrap;\n          word-break: break-word;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nfunction emojiOfBoolean(s) {\n  return s ? '✅ - 支持' : '❌ - 不支持';\n}\n\nfunction parseMediaDescription(sdp) {\n  return (sdp ?? '')\n    .split('\\n')\n    .filter((v) => v.startsWith('m='))\n    .map((v) => v.substring(2))\n    .map((v) => v.match(/^(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(.*)/))\n    .map(([_, media, port, protocol, format]) => ({\n      media,\n      port,\n      protocol,\n      format,\n    }));\n}\n\nfunction parsePayloadType(sdp) {\n  return (sdp ?? '')\n    .split('\\n')\n    .filter((v) => v.startsWith('a=rtpmap:'))\n    .map((v) => v.substring('a=rtpmap:'.length))\n    .map((v) => v.match(/^(\\S+)\\s+([^/]+)[/]([^/]+)(\\s+(.*))?/))\n    .map(([_, type, encodingName, clockRate, encodingParameter]) => ({\n      type,\n      encodingName,\n      clockRate,\n      encodingParameter,\n    }));\n}\n\n/// https://getbootstrap.com/docs/4.1/layout/overview/\n/// xm md lg xl\nfunction useBreakpoints({ breaks = [575.98, 768.98, 991.98, 1199.98], values = null } = {}) {\n  const onResize = () => {\n    const w = getGlobalThis()['innerWidth'] || 0;\n    let i = breaks.findIndex((v) => v > w);\n    i = i === -1 ? breaks.length : i;\n    let v = i;\n    if (values) {\n      if (i > values.length - 1) {\n        v = values[values.length - 1];\n      } else {\n        v = values[i];\n      }\n    }\n    return v;\n  };\n\n  const [val, setVal] = useState(onResize);\n\n  useEffect(() => {\n    setVal(onResize());\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return val;\n}\n\nfunction renderSummary(s: string) {\n  if (s.length < 10) {\n    return s;\n  }\n  return (\n    <details>\n      <summary title={s}>{s.substring(0, 8)}</summary>\n      {s}\n    </details>\n  );\n}\n"],"names":["die","error","args","e","errors","msg","apply","Error","length","join","data","path","op","plugin","getPeerConnectionState","conn","connectionState","iceGatheringState","iceConnectionState","signalingState","idpErrorInfo","sctpState","sctp","_conn$sctp2","state","sctpTransportState","_conn$sctp3","transport","_conn$sctp3$transport","CandidateErrorLine","candidate","url","errorCode","errorText","hostCandidate","React","style","display","alignItems","phase","setPhase","useState","connState","setConnState","candidates","setCandidates","iceServers","setIceServers","urls","devices","setDevices","connRef","useRef","remoteRef","metaRef","globalThis","getGlobalThis","useAsyncEffect","async","navigator","mediaDevices","_navigator$mediaDevic","enumerateDevices","setCloser","RTCPeerConnection","closer","forEach","v","configuration","current","push","onStateChange","handler","neo","produce","s","Object","assign","events","addEventListener","removeEventListener","addPeerConnectionStateListener","close","bind","window","gatherReady","createLazyPromise","connectionReady","resolve","includes","console","log","foundation","address","component","ip","port","priority","protocol","relatedAddress","relatedPort","sdpMLineIndex","sdpMid","tcpType","type","usernameFragment","meta","createDataChannel","ordered","offer","createOffer","offerToReceiveAudio","offerToReceiveVideo","setLocalDescription","remote","remoteCandidates","candidatesPromise","finally","getCandidates","setRemoteDescription","answer","createAnswer","addIceCandidate","columns","useBreakpoints","values","supportColumns","Descriptions","column","layout","bordered","Item","label","emojiOfBoolean","RTCDataChannel","_globalThis$navigator","_globalThis$navigator2","getUserMedia","_globalThis$navigator3","_globalThis$navigator4","className","name","map","key","span","sdp","_connRef$current","localDescription","_connRef$current$loca","split","filter","startsWith","substring","match","_","media","format","i","encodingName","clockRate","encodingParameter","parsePayloadType","_connRef$current2","_connRef$current2$loc","sort","a","b","LoadingOutlined","relatePort","tableLayout","minWidth","kind","groupId","deviceId","renderSummary","JSON","stringify","_globalThis$navigator6","_globalThis$navigator7","getSupportedConstraints","_globalThis$navigator8","width","overflowX","_connRef$current3","_connRef$current3$loc","_remoteRef$current","_remoteRef$current$lo","jsx","global","breaks","onResize","w","findIndex","val","setVal","useEffect","title"],"mappings":"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"}