{"version":3,"file":"index.js","sources":["../../../../../.yarn/unplugged/fast-xml-parser-npm-3.17.4-530b63c175/node_modules/fast-xml-parser/src/util.js","../../../../../.yarn/unplugged/fast-xml-parser-npm-3.17.4-530b63c175/node_modules/fast-xml-parser/src/node2json.js","../../../../../.yarn/unplugged/fast-xml-parser-npm-3.17.4-530b63c175/node_modules/fast-xml-parser/src/xmlNode.js","../../../../../.yarn/unplugged/fast-xml-parser-npm-3.17.4-530b63c175/node_modules/fast-xml-parser/src/xmlstr2xmlnode.js","../../../../../.yarn/unplugged/fast-xml-parser-npm-3.17.4-530b63c175/node_modules/fast-xml-parser/src/validator.js","../../../../../.yarn/unplugged/fast-xml-parser-npm-3.17.4-530b63c175/node_modules/fast-xml-parser/src/nimndata.js","../../../../../.yarn/unplugged/fast-xml-parser-npm-3.17.4-530b63c175/node_modules/fast-xml-parser/src/node2json_str.js","../../../../../.yarn/unplugged/fast-xml-parser-npm-3.17.4-530b63c175/node_modules/fast-xml-parser/src/json2xml.js","../../../../../.yarn/unplugged/fast-xml-parser-npm-3.17.4-530b63c175/node_modules/fast-xml-parser/src/parser.js"],"sourcesContent":["'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if(arrayMode === 'strict'){\n        target[keys[i]] = [ a[keys[i]] ];\n      }else{\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.buildOptions = function(options, defaultOptions, props) {\n  var newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options) {\n  const jObj = {};\n\n  //when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    //otherwise create a textnode if node has some text\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        if(options.arrayMode === \"strict\"){\n          jObj[options.textNodeName] = [ node.val ];\n        }else{\n          jObj[options.textNodeName] = node.val;\n        }\n      }\n    }\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj[tagname] = [];\n      for (var tag in node.child[tagname]) {\n        jObj[tagname].push(convertToJson(node.child[tagname][tag], options));\n      }\n    } else {\n      if(options.arrayMode === true){\n        const result = convertToJson(node.child[tagname][0], options)\n        if(typeof result === 'object')\n          jObj[tagname] = [ result ];\n        else\n          jObj[tagname] = result;\n      }else if(options.arrayMode === \"strict\"){\n        jObj[tagname] = [convertToJson(node.child[tagname][0], options) ];\n      }else{\n        jObj[tagname] = convertToJson(node.child[tagname][0], options);\n      }\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n","'use strict';\n\nmodule.exports = function(tagname, parent, val) {\n  this.tagname = tagname;\n  this.parent = parent;\n  this.child = {}; //child tags\n  this.attrsMap = {}; //attributes map\n  this.val = val; //text only\n  this.addChild = function(child) {\n    if (Array.isArray(this.child[child.tagname])) {\n      //already presents\n      this.child[child.tagname].push(child);\n    } else {\n      this.child[child.tagname] = [child];\n    }\n  };\n};\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst xmlNode = require('./xmlNode');\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n  Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n  Number.parseFloat = window.parseFloat;\n}\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  ignoreNameSpace: false,\n  allowBooleanAttributes: false, //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseNodeValue: true,\n  parseAttributeValue: false,\n  arrayMode: false,\n  trimValues: true, //Trim string values of tag and attributes\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  tagValueProcessor: function(a, tagName) {\n    return a;\n  },\n  attrValueProcessor: function(a, attrName) {\n    return a;\n  },\n  stopNodes: []\n  //decodeStrict: false,\n};\n\nexports.defaultOptions = defaultOptions;\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'ignoreNameSpace',\n  'allowBooleanAttributes',\n  'parseNodeValue',\n  'parseAttributeValue',\n  'arrayMode',\n  'trimValues',\n  'cdataTagName',\n  'cdataPositionChar',\n  'tagValueProcessor',\n  'attrValueProcessor',\n  'parseTrueNumberOnly',\n  'stopNodes'\n];\nexports.props = props;\n\n/**\n * Trim -> valueProcessor -> parse value\n * @param {string} tagName\n * @param {string} val\n * @param {object} options\n */\nfunction processTagValue(tagName, val, options) {\n  if (val) {\n    if (options.trimValues) {\n      val = val.trim();\n    }\n    val = options.tagValueProcessor(val, tagName);\n    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);\n  }\n\n  return val;\n}\n\nfunction resolveNameSpace(tagname, options) {\n  if (options.ignoreNameSpace) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\nfunction parseValue(val, shouldParse, parseTrueNumberOnly) {\n  if (shouldParse && typeof val === 'string') {\n    let parsed;\n    if (val.trim() === '' || isNaN(val)) {\n      parsed = val === 'true' ? true : val === 'false' ? false : val;\n    } else {\n      if (val.indexOf('0x') !== -1) {\n        //support hexa decimal\n        parsed = Number.parseInt(val, 16);\n      } else if (val.indexOf('.') !== -1) {\n        parsed = Number.parseFloat(val);\n        val = val.replace(/\\.?0+$/, \"\");\n      } else {\n        parsed = Number.parseInt(val, 10);\n      }\n      if (parseTrueNumberOnly) {\n        parsed = String(parsed) === val ? parsed : val;\n      }\n    }\n    return parsed;\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])(.*?)\\\\3)?', 'g');\n\nfunction buildAttributesMap(attrStr, options) {\n  if (!options.ignoreAttributes && typeof attrStr === 'string') {\n    attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = resolveNameSpace(matches[i][1], options);\n      if (attrName.length) {\n        if (matches[i][4] !== undefined) {\n          if (options.trimValues) {\n            matches[i][4] = matches[i][4].trim();\n          }\n          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);\n          attrs[options.attributeNamePrefix + attrName] = parseValue(\n            matches[i][4],\n            options.parseAttributeValue,\n            options.parseTrueNumberOnly\n          );\n        } else if (options.allowBooleanAttributes) {\n          attrs[options.attributeNamePrefix + attrName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (options.attrNodeName) {\n      const attrCollection = {};\n      attrCollection[options.attrNodeName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst getTraversalObj = function(xmlData, options) {\n  xmlData = xmlData.replace(/(\\r\\n)|\\n/, \" \");\n  options = buildOptions(options, defaultOptions, props);\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n\n//function match(xmlData){\n  for(let i=0; i< xmlData.length; i++){\n    const ch = xmlData[i];\n    if(ch === '<'){\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        /* if (currentNode.parent) {\n          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);\n        } */\n        if(currentNode){\n          if(currentNode.val){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData , options);\n          }else{\n            currentNode.val = processTagValue(tagName, textData , options);\n          }\n        }\n\n        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {\n          currentNode.child = []\n          if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}\n          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1)\n        }\n        currentNode = currentNode.parent;\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n        i = findClosingIndex(xmlData, \"?>\", i, \"Pi Tag is not closed.\")\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        i = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\")\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"DOCTYPE is not closed.\")\n        const tagExp = xmlData.substring(i, closeIndex);\n        if(tagExp.indexOf(\"[\") >= 0){\n          i = xmlData.indexOf(\"]>\", i) + 1;\n        }else{\n          i = closeIndex;\n        }\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        //considerations\n        //1. CDATA will always have parent node\n        //2. A tag with CDATA is not a leaf node so it's value would be string type.\n        if(textData){\n          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData , options);\n          textData = \"\";\n        }\n\n        if (options.cdataTagName) {\n          //add cdata node\n          const childNode = new xmlNode(options.cdataTagName, currentNode, tagExp);\n          currentNode.addChild(childNode);\n          //for backtracking\n          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;\n          //add rest value to parent node\n          if (tagExp) {\n            childNode.val = tagExp;\n          }\n        } else {\n          currentNode.val = (currentNode.val || '') + (tagExp || '');\n        }\n\n        i = closeIndex + 2;\n      }else {//Opening tag\n        const result = closingIndexForOpeningTag(xmlData, i+1)\n        let tagExp = result.data;\n        const closeIndex = result.index;\n        const separatorIndex = tagExp.indexOf(\" \");\n        let tagName = tagExp;\n        if(separatorIndex !== -1){\n          tagName = tagExp.substr(0, separatorIndex).trimRight();\n          tagExp = tagExp.substr(separatorIndex + 1);\n        }\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        //save text to parent node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue( currentNode.tagname, textData, options);\n          }\n        }\n\n        if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){//selfClosing tag\n\n          if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n            tagName = tagName.substr(0, tagName.length - 1);\n            tagExp = tagName;\n          }else{\n            tagExp = tagExp.substr(0, tagExp.length - 1);\n          }\n\n          const childNode = new xmlNode(tagName, currentNode, '');\n          if(tagName !== tagExp){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n        }else{//opening tag\n\n          const childNode = new xmlNode( tagName, currentNode );\n          if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {\n            childNode.startIndex=closeIndex;\n          }\n          if(tagName !== tagExp){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n          currentNode = childNode;\n        }\n        textData = \"\";\n        i = closeIndex;\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj;\n}\n\nfunction closingIndexForOpeningTag(data, i){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < data.length; index++) {\n    let ch = data[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === '>') {\n        return {\n          data: tagExp,\n          index: index\n        }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nexports.getTraversalObj = getTraversalObj;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n};\n\nconst props = ['allowBooleanAttributes'];\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n\n  for (let i = 0; i < xmlData.length; i++) {\n    if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n\n      i++;\n      if (xmlData[i] === '?') {\n        i = readPI(xmlData, ++i);\n        if (i.err) {\n          return i;\n        }\n      } else if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"There is an unnecessary space between tag name and backward slash '</ ..'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, i));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg) {\n              return getErrorObject('InvalidTag', \"Closing tag '\"+otg+\"' is expected inplace of '\"+tagName+\"'.\", getLineNumberForPosition(xmlData, i));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else {\n            tags.push(tagName);\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else {\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if (xmlData[i] === ' ' || xmlData[i] === '\\t' || xmlData[i] === '\\n' || xmlData[i] === '\\r') {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  } else if (tags.length > 0) {\n    return getErrorObject('InvalidXml', \"Invalid '\"+JSON.stringify(tags, null, 4).replace(/\\r?\\n/g, '')+\"' found.\", 1);\n  }\n\n  return true;\n};\n\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  var start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      var tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n        continue;\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(attrStr, matches[i][0]))\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  var lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return lines.length;\n}\n\n//this function returns the position of the last character of match within attrStr\nfunction getPositionFromMatch(attrStr, match) {\n  return attrStr.indexOf(match) + match.length;\n}\n","'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst x2j = require('./xmlstr2xmlnode');\n\n//TODO: do it later\nconst convertToJsonString = function(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function(node, options, level) {\n  let jObj = '{';\n\n  //traver through all the children\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n  util.merge(jObj, node.attrsMap);\n  //add attrsMap as new children\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  }\n  //add value\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;\n","'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n","'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)\n  //print(traversableObj, \"  \");\n  return nodeToJson.convertToJson(traversableObj, options);\n};\nexports.convertTonimn = require('../src/nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\n\nfunction print(xmlNode, indentation){\n  if(xmlNode){\n    console.log(indentation + \"{\")\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n    if(xmlNode.parent){\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname  + \"\\\", \");\n    }\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val  + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap,null,4)  + \", \");\n\n    if(xmlNode.child){\n      console.log(indentation + \"\\\"child\\\": {\")\n      const indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach( function(key) {\n        const node = xmlNode.child[key];\n\n        if(Array.isArray(node)){\n          console.log(indentation +  \"\\\"\"+key+\"\\\" :[\")\n          node.forEach( function(item,index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          })\n          console.log(indentation + \"],\")  \n        }else{\n          console.log(indentation + \" \\\"\"+key+\"\\\" : {\")\n          print(node, indentation2);\n          console.log(indentation + \"},\")  \n        }\n      });\n      console.log(indentation + \"},\")\n    }\n    console.log(indentation + \"},\")\n  }\n}"],"names":["nameStartChar","nameChar","nameRegexp","regexName","RegExp","getAllMatches","string","regex","matches","match","exec","allmatches","len","length","index","push","isName","exports","v","obj","Object","keys","target","a","arrayMode","i","isExist","options","defaultOptions","props","newOptions","undefined","convertToJson","node","jObj","child","util","isEmptyObject","attrsMap","val","cdataPositionChar","textNodeName","merge","tagname","tag","result","module","parent","addChild","Array","isArray","buildOptions","require","regx","replace","Number","parseInt","window","parseFloat","attributeNamePrefix","attrNodeName","ignoreAttributes","ignoreNameSpace","allowBooleanAttributes","parseNodeValue","parseAttributeValue","trimValues","cdataTagName","tagValueProcessor","tagName","attrValueProcessor","attrName","stopNodes","processTagValue","trim","parseValue","parseTrueNumberOnly","resolveNameSpace","tags","split","prefix","charAt","shouldParse","parsed","isNaN","indexOf","String","attrsRegx","buildAttributesMap","attrStr","attrs","attrCollection","getTraversalObj","xmlData","xmlObj","xmlNode","currentNode","textData","ch","closeIndex","findClosingIndex","substring","colonIndex","substr","getValue","includes","startIndex","tagExp","childNode","closingIndexForOpeningTag","data","separatorIndex","trimRight","lastIndexOf","attrBoundary","str","errMsg","closingIndex","Error","tagFound","reachedRoot","readPI","err","readCommentAndCDATA","closingTag","validateTagName","msg","getErrorObject","getLineNumberForPosition","readAttributeStr","value","isValid","validateAttributeString","code","line","tagClosed","otg","pop","afterAmp","validateAmpersand","JSON","stringify","start","angleBracketsCount","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","validateAttrName","hasOwnProperty","validateNumberAmpersand","re","count","message","lineNumber","lines","char","fromCharCode","chars","nilChar","missingChar","nilPremitive","missingPremitive","emptyChar","emptyValue","boundryChar","objStart","arrStart","arrayEnd","charsArr","_e","e_schema","hasValidData","hasData","itemSchema","arr_len","arr_i","r","processValue","key","isAppChar","convert2nimn","x2j","convertToJsonString","indentBy","_cToJsonStr","level","stringval","format","supressEmptyNode","Parser","isAttribute","attrPrefixLen","isCDATA","replaceCDATAstr","replaceCDATAarr","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","prototype","parse","j2x","Date","attr","arrLen","j","item","Ks","L","cdata","join","repeat","name","startsWith","x2xmlnode","validationOption","validator","validate","traversableObj","xmlToNodeobj","nodeToJson","schema","convertTonimn"],"mappings":"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"}